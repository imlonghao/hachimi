// Code generated by 'yaegi extract github.com/valyala/fasthttp'. DO NOT EDIT.

package symbols

import (
	"context"
	"github.com/valyala/fasthttp"
	"go/constant"
	"go/token"
	"net"
	"reflect"
	"time"
)

func init() {
	Symbols["github.com/valyala/fasthttp/fasthttp"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AcquireArgs":                            reflect.ValueOf(fasthttp.AcquireArgs),
		"AcquireCookie":                          reflect.ValueOf(fasthttp.AcquireCookie),
		"AcquireRequest":                         reflect.ValueOf(fasthttp.AcquireRequest),
		"AcquireResponse":                        reflect.ValueOf(fasthttp.AcquireResponse),
		"AcquireTimer":                           reflect.ValueOf(fasthttp.AcquireTimer),
		"AcquireURI":                             reflect.ValueOf(fasthttp.AcquireURI),
		"AddMissingPort":                         reflect.ValueOf(fasthttp.AddMissingPort),
		"AppendBrotliBytes":                      reflect.ValueOf(fasthttp.AppendBrotliBytes),
		"AppendBrotliBytesLevel":                 reflect.ValueOf(fasthttp.AppendBrotliBytesLevel),
		"AppendDeflateBytes":                     reflect.ValueOf(fasthttp.AppendDeflateBytes),
		"AppendDeflateBytesLevel":                reflect.ValueOf(fasthttp.AppendDeflateBytesLevel),
		"AppendGunzipBytes":                      reflect.ValueOf(fasthttp.AppendGunzipBytes),
		"AppendGzipBytes":                        reflect.ValueOf(fasthttp.AppendGzipBytes),
		"AppendGzipBytesLevel":                   reflect.ValueOf(fasthttp.AppendGzipBytesLevel),
		"AppendHTMLEscape":                       reflect.ValueOf(fasthttp.AppendHTMLEscape),
		"AppendHTMLEscapeBytes":                  reflect.ValueOf(fasthttp.AppendHTMLEscapeBytes),
		"AppendHTTPDate":                         reflect.ValueOf(fasthttp.AppendHTTPDate),
		"AppendIPv4":                             reflect.ValueOf(fasthttp.AppendIPv4),
		"AppendInflateBytes":                     reflect.ValueOf(fasthttp.AppendInflateBytes),
		"AppendNormalizedHeaderKey":              reflect.ValueOf(fasthttp.AppendNormalizedHeaderKey),
		"AppendNormalizedHeaderKeyBytes":         reflect.ValueOf(fasthttp.AppendNormalizedHeaderKeyBytes),
		"AppendQuotedArg":                        reflect.ValueOf(fasthttp.AppendQuotedArg),
		"AppendUint":                             reflect.ValueOf(fasthttp.AppendUint),
		"AppendUnbrotliBytes":                    reflect.ValueOf(fasthttp.AppendUnbrotliBytes),
		"AppendUnquotedArg":                      reflect.ValueOf(fasthttp.AppendUnquotedArg),
		"AppendUnzstdBytes":                      reflect.ValueOf(fasthttp.AppendUnzstdBytes),
		"AppendZstdBytes":                        reflect.ValueOf(fasthttp.AppendZstdBytes),
		"AppendZstdBytesLevel":                   reflect.ValueOf(fasthttp.AppendZstdBytesLevel),
		"CoarseTimeNow":                          reflect.ValueOf(fasthttp.CoarseTimeNow),
		"CompressBestCompression":                reflect.ValueOf(constant.MakeFromLiteral("9", token.INT, 0)),
		"CompressBestSpeed":                      reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"CompressBrotliBestCompression":          reflect.ValueOf(constant.MakeFromLiteral("11", token.INT, 0)),
		"CompressBrotliBestSpeed":                reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"CompressBrotliDefaultCompression":       reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"CompressBrotliNoCompression":            reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"CompressDefaultCompression":             reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"CompressHandler":                        reflect.ValueOf(fasthttp.CompressHandler),
		"CompressHandlerBrotliLevel":             reflect.ValueOf(fasthttp.CompressHandlerBrotliLevel),
		"CompressHandlerLevel":                   reflect.ValueOf(fasthttp.CompressHandlerLevel),
		"CompressHuffmanOnly":                    reflect.ValueOf(constant.MakeFromLiteral("-2", token.INT, 0)),
		"CompressNoCompression":                  reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"CompressZstdBestCompression":            reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"CompressZstdBestSpeed":                  reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"CompressZstdDefault":                    reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"CompressZstdSpeedBetter":                reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"CompressZstdSpeedNotSet":                reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"CookieExpireDelete":                     reflect.ValueOf(&fasthttp.CookieExpireDelete).Elem(),
		"CookieExpireUnlimited":                  reflect.ValueOf(&fasthttp.CookieExpireUnlimited).Elem(),
		"CookieSameSiteDefaultMode":              reflect.ValueOf(fasthttp.CookieSameSiteDefaultMode),
		"CookieSameSiteDisabled":                 reflect.ValueOf(fasthttp.CookieSameSiteDisabled),
		"CookieSameSiteLaxMode":                  reflect.ValueOf(fasthttp.CookieSameSiteLaxMode),
		"CookieSameSiteNoneMode":                 reflect.ValueOf(fasthttp.CookieSameSiteNoneMode),
		"CookieSameSiteStrictMode":               reflect.ValueOf(fasthttp.CookieSameSiteStrictMode),
		"DefaultConcurrency":                     reflect.ValueOf(constant.MakeFromLiteral("262144", token.INT, 0)),
		"DefaultDNSCacheDuration":                reflect.ValueOf(fasthttp.DefaultDNSCacheDuration),
		"DefaultDialTimeout":                     reflect.ValueOf(fasthttp.DefaultDialTimeout),
		"DefaultLBClientTimeout":                 reflect.ValueOf(fasthttp.DefaultLBClientTimeout),
		"DefaultMaxConnsPerHost":                 reflect.ValueOf(constant.MakeFromLiteral("512", token.INT, 0)),
		"DefaultMaxIdemponentCallAttempts":       reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"DefaultMaxIdleConnDuration":             reflect.ValueOf(fasthttp.DefaultMaxIdleConnDuration),
		"DefaultMaxPendingRequests":              reflect.ValueOf(constant.MakeFromLiteral("1024", token.INT, 0)),
		"DefaultMaxRequestBodySize":              reflect.ValueOf(constant.MakeFromLiteral("4194304", token.INT, 0)),
		"DefaultTransport":                       reflect.ValueOf(&fasthttp.DefaultTransport).Elem(),
		"Dial":                                   reflect.ValueOf(fasthttp.Dial),
		"DialDualStack":                          reflect.ValueOf(fasthttp.DialDualStack),
		"DialDualStackTimeout":                   reflect.ValueOf(fasthttp.DialDualStackTimeout),
		"DialTimeout":                            reflect.ValueOf(fasthttp.DialTimeout),
		"Do":                                     reflect.ValueOf(fasthttp.Do),
		"DoDeadline":                             reflect.ValueOf(fasthttp.DoDeadline),
		"DoRedirects":                            reflect.ValueOf(fasthttp.DoRedirects),
		"DoTimeout":                              reflect.ValueOf(fasthttp.DoTimeout),
		"ErrAlreadyServing":                      reflect.ValueOf(&fasthttp.ErrAlreadyServing).Elem(),
		"ErrBadTrailer":                          reflect.ValueOf(&fasthttp.ErrBadTrailer).Elem(),
		"ErrBodyTooLarge":                        reflect.ValueOf(&fasthttp.ErrBodyTooLarge).Elem(),
		"ErrConcurrencyLimit":                    reflect.ValueOf(&fasthttp.ErrConcurrencyLimit).Elem(),
		"ErrConnPoolStrategyNotImpl":             reflect.ValueOf(&fasthttp.ErrConnPoolStrategyNotImpl).Elem(),
		"ErrConnectionClosed":                    reflect.ValueOf(&fasthttp.ErrConnectionClosed).Elem(),
		"ErrContentEncodingUnsupported":          reflect.ValueOf(&fasthttp.ErrContentEncodingUnsupported).Elem(),
		"ErrDialTimeout":                         reflect.ValueOf(&fasthttp.ErrDialTimeout).Elem(),
		"ErrGetOnly":                             reflect.ValueOf(&fasthttp.ErrGetOnly).Elem(),
		"ErrHostClientRedirectToDifferentScheme": reflect.ValueOf(&fasthttp.ErrHostClientRedirectToDifferentScheme).Elem(),
		"ErrMissingFile":                         reflect.ValueOf(&fasthttp.ErrMissingFile).Elem(),
		"ErrMissingLocation":                     reflect.ValueOf(&fasthttp.ErrMissingLocation).Elem(),
		"ErrNoArgValue":                          reflect.ValueOf(&fasthttp.ErrNoArgValue).Elem(),
		"ErrNoFreeConns":                         reflect.ValueOf(&fasthttp.ErrNoFreeConns).Elem(),
		"ErrNoMultipartForm":                     reflect.ValueOf(&fasthttp.ErrNoMultipartForm).Elem(),
		"ErrPerIPConnLimit":                      reflect.ValueOf(&fasthttp.ErrPerIPConnLimit).Elem(),
		"ErrPipelineOverflow":                    reflect.ValueOf(&fasthttp.ErrPipelineOverflow).Elem(),
		"ErrTLSHandshakeTimeout":                 reflect.ValueOf(&fasthttp.ErrTLSHandshakeTimeout).Elem(),
		"ErrTimeout":                             reflect.ValueOf(&fasthttp.ErrTimeout).Elem(),
		"ErrTooManyRedirects":                    reflect.ValueOf(&fasthttp.ErrTooManyRedirects).Elem(),
		"ErrorInvalidURI":                        reflect.ValueOf(&fasthttp.ErrorInvalidURI).Elem(),
		"FIFO":                                   reflect.ValueOf(fasthttp.FIFO),
		"FSCompressedFileSuffix":                 reflect.ValueOf(constant.MakeFromLiteral("\".fasthttp.gz\"", token.STRING, 0)),
		"FSCompressedFileSuffixes":               reflect.ValueOf(&fasthttp.FSCompressedFileSuffixes).Elem(),
		"FSHandler":                              reflect.ValueOf(fasthttp.FSHandler),
		"FSHandlerCacheDuration":                 reflect.ValueOf(fasthttp.FSHandlerCacheDuration),
		"FileLastModified":                       reflect.ValueOf(fasthttp.FileLastModified),
		"GenerateTestCertificate":                reflect.ValueOf(fasthttp.GenerateTestCertificate),
		"Get":                                    reflect.ValueOf(fasthttp.Get),
		"GetDeadline":                            reflect.ValueOf(fasthttp.GetDeadline),
		"GetTimeout":                             reflect.ValueOf(fasthttp.GetTimeout),
		"HeaderAccept":                           reflect.ValueOf(constant.MakeFromLiteral("\"Accept\"", token.STRING, 0)),
		"HeaderAcceptCH":                         reflect.ValueOf(constant.MakeFromLiteral("\"Accept-CH\"", token.STRING, 0)),
		"HeaderAcceptCHLifetime":                 reflect.ValueOf(constant.MakeFromLiteral("\"Accept-CH-Lifetime\"", token.STRING, 0)),
		"HeaderAcceptCharset":                    reflect.ValueOf(constant.MakeFromLiteral("\"Accept-Charset\"", token.STRING, 0)),
		"HeaderAcceptEncoding":                   reflect.ValueOf(constant.MakeFromLiteral("\"Accept-Encoding\"", token.STRING, 0)),
		"HeaderAcceptLanguage":                   reflect.ValueOf(constant.MakeFromLiteral("\"Accept-Language\"", token.STRING, 0)),
		"HeaderAcceptPatch":                      reflect.ValueOf(constant.MakeFromLiteral("\"Accept-Patch\"", token.STRING, 0)),
		"HeaderAcceptPushPolicy":                 reflect.ValueOf(constant.MakeFromLiteral("\"Accept-Push-Policy\"", token.STRING, 0)),
		"HeaderAcceptRanges":                     reflect.ValueOf(constant.MakeFromLiteral("\"Accept-Ranges\"", token.STRING, 0)),
		"HeaderAcceptSignature":                  reflect.ValueOf(constant.MakeFromLiteral("\"Accept-Signature\"", token.STRING, 0)),
		"HeaderAccessControlAllowCredentials":    reflect.ValueOf(constant.MakeFromLiteral("\"Access-Control-Allow-Credentials\"", token.STRING, 0)),
		"HeaderAccessControlAllowHeaders":        reflect.ValueOf(constant.MakeFromLiteral("\"Access-Control-Allow-Headers\"", token.STRING, 0)),
		"HeaderAccessControlAllowMethods":        reflect.ValueOf(constant.MakeFromLiteral("\"Access-Control-Allow-Methods\"", token.STRING, 0)),
		"HeaderAccessControlAllowOrigin":         reflect.ValueOf(constant.MakeFromLiteral("\"Access-Control-Allow-Origin\"", token.STRING, 0)),
		"HeaderAccessControlExposeHeaders":       reflect.ValueOf(constant.MakeFromLiteral("\"Access-Control-Expose-Headers\"", token.STRING, 0)),
		"HeaderAccessControlMaxAge":              reflect.ValueOf(constant.MakeFromLiteral("\"Access-Control-Max-Age\"", token.STRING, 0)),
		"HeaderAccessControlRequestHeaders":      reflect.ValueOf(constant.MakeFromLiteral("\"Access-Control-Request-Headers\"", token.STRING, 0)),
		"HeaderAccessControlRequestMethod":       reflect.ValueOf(constant.MakeFromLiteral("\"Access-Control-Request-Method\"", token.STRING, 0)),
		"HeaderAge":                              reflect.ValueOf(constant.MakeFromLiteral("\"Age\"", token.STRING, 0)),
		"HeaderAllow":                            reflect.ValueOf(constant.MakeFromLiteral("\"Allow\"", token.STRING, 0)),
		"HeaderAltSvc":                           reflect.ValueOf(constant.MakeFromLiteral("\"Alt-Svc\"", token.STRING, 0)),
		"HeaderAuthorization":                    reflect.ValueOf(constant.MakeFromLiteral("\"Authorization\"", token.STRING, 0)),
		"HeaderCacheControl":                     reflect.ValueOf(constant.MakeFromLiteral("\"Cache-Control\"", token.STRING, 0)),
		"HeaderClearSiteData":                    reflect.ValueOf(constant.MakeFromLiteral("\"Clear-Site-Data\"", token.STRING, 0)),
		"HeaderConnection":                       reflect.ValueOf(constant.MakeFromLiteral("\"Connection\"", token.STRING, 0)),
		"HeaderContentDPR":                       reflect.ValueOf(constant.MakeFromLiteral("\"Content-DPR\"", token.STRING, 0)),
		"HeaderContentDisposition":               reflect.ValueOf(constant.MakeFromLiteral("\"Content-Disposition\"", token.STRING, 0)),
		"HeaderContentEncoding":                  reflect.ValueOf(constant.MakeFromLiteral("\"Content-Encoding\"", token.STRING, 0)),
		"HeaderContentLanguage":                  reflect.ValueOf(constant.MakeFromLiteral("\"Content-Language\"", token.STRING, 0)),
		"HeaderContentLength":                    reflect.ValueOf(constant.MakeFromLiteral("\"Content-Length\"", token.STRING, 0)),
		"HeaderContentLocation":                  reflect.ValueOf(constant.MakeFromLiteral("\"Content-Location\"", token.STRING, 0)),
		"HeaderContentRange":                     reflect.ValueOf(constant.MakeFromLiteral("\"Content-Range\"", token.STRING, 0)),
		"HeaderContentSecurityPolicy":            reflect.ValueOf(constant.MakeFromLiteral("\"Content-Security-Policy\"", token.STRING, 0)),
		"HeaderContentSecurityPolicyReportOnly":  reflect.ValueOf(constant.MakeFromLiteral("\"Content-Security-Policy-Report-Only\"", token.STRING, 0)),
		"HeaderContentType":                      reflect.ValueOf(constant.MakeFromLiteral("\"Content-Type\"", token.STRING, 0)),
		"HeaderCookie":                           reflect.ValueOf(constant.MakeFromLiteral("\"Cookie\"", token.STRING, 0)),
		"HeaderCrossOriginResourcePolicy":        reflect.ValueOf(constant.MakeFromLiteral("\"Cross-Origin-Resource-Policy\"", token.STRING, 0)),
		"HeaderDNT":                              reflect.ValueOf(constant.MakeFromLiteral("\"DNT\"", token.STRING, 0)),
		"HeaderDPR":                              reflect.ValueOf(constant.MakeFromLiteral("\"DPR\"", token.STRING, 0)),
		"HeaderDate":                             reflect.ValueOf(constant.MakeFromLiteral("\"Date\"", token.STRING, 0)),
		"HeaderETag":                             reflect.ValueOf(constant.MakeFromLiteral("\"ETag\"", token.STRING, 0)),
		"HeaderEarlyData":                        reflect.ValueOf(constant.MakeFromLiteral("\"Early-Data\"", token.STRING, 0)),
		"HeaderExpect":                           reflect.ValueOf(constant.MakeFromLiteral("\"Expect\"", token.STRING, 0)),
		"HeaderExpectCT":                         reflect.ValueOf(constant.MakeFromLiteral("\"Expect-CT\"", token.STRING, 0)),
		"HeaderExpires":                          reflect.ValueOf(constant.MakeFromLiteral("\"Expires\"", token.STRING, 0)),
		"HeaderFeaturePolicy":                    reflect.ValueOf(constant.MakeFromLiteral("\"Feature-Policy\"", token.STRING, 0)),
		"HeaderForwarded":                        reflect.ValueOf(constant.MakeFromLiteral("\"Forwarded\"", token.STRING, 0)),
		"HeaderFrom":                             reflect.ValueOf(constant.MakeFromLiteral("\"From\"", token.STRING, 0)),
		"HeaderHost":                             reflect.ValueOf(constant.MakeFromLiteral("\"Host\"", token.STRING, 0)),
		"HeaderIfMatch":                          reflect.ValueOf(constant.MakeFromLiteral("\"If-Match\"", token.STRING, 0)),
		"HeaderIfModifiedSince":                  reflect.ValueOf(constant.MakeFromLiteral("\"If-Modified-Since\"", token.STRING, 0)),
		"HeaderIfNoneMatch":                      reflect.ValueOf(constant.MakeFromLiteral("\"If-None-Match\"", token.STRING, 0)),
		"HeaderIfRange":                          reflect.ValueOf(constant.MakeFromLiteral("\"If-Range\"", token.STRING, 0)),
		"HeaderIfUnmodifiedSince":                reflect.ValueOf(constant.MakeFromLiteral("\"If-Unmodified-Since\"", token.STRING, 0)),
		"HeaderIndex":                            reflect.ValueOf(constant.MakeFromLiteral("\"Index\"", token.STRING, 0)),
		"HeaderKeepAlive":                        reflect.ValueOf(constant.MakeFromLiteral("\"Keep-Alive\"", token.STRING, 0)),
		"HeaderLargeAllocation":                  reflect.ValueOf(constant.MakeFromLiteral("\"Large-Allocation\"", token.STRING, 0)),
		"HeaderLastEventID":                      reflect.ValueOf(constant.MakeFromLiteral("\"Last-Event-ID\"", token.STRING, 0)),
		"HeaderLastModified":                     reflect.ValueOf(constant.MakeFromLiteral("\"Last-Modified\"", token.STRING, 0)),
		"HeaderLink":                             reflect.ValueOf(constant.MakeFromLiteral("\"Link\"", token.STRING, 0)),
		"HeaderLocation":                         reflect.ValueOf(constant.MakeFromLiteral("\"Location\"", token.STRING, 0)),
		"HeaderMaxForwards":                      reflect.ValueOf(constant.MakeFromLiteral("\"Max-Forwards\"", token.STRING, 0)),
		"HeaderNEL":                              reflect.ValueOf(constant.MakeFromLiteral("\"NEL\"", token.STRING, 0)),
		"HeaderOrigin":                           reflect.ValueOf(constant.MakeFromLiteral("\"Origin\"", token.STRING, 0)),
		"HeaderPingFrom":                         reflect.ValueOf(constant.MakeFromLiteral("\"Ping-From\"", token.STRING, 0)),
		"HeaderPingTo":                           reflect.ValueOf(constant.MakeFromLiteral("\"Ping-To\"", token.STRING, 0)),
		"HeaderPragma":                           reflect.ValueOf(constant.MakeFromLiteral("\"Pragma\"", token.STRING, 0)),
		"HeaderProxyAuthenticate":                reflect.ValueOf(constant.MakeFromLiteral("\"Proxy-Authenticate\"", token.STRING, 0)),
		"HeaderProxyAuthorization":               reflect.ValueOf(constant.MakeFromLiteral("\"Proxy-Authorization\"", token.STRING, 0)),
		"HeaderProxyConnection":                  reflect.ValueOf(constant.MakeFromLiteral("\"Proxy-Connection\"", token.STRING, 0)),
		"HeaderPublicKeyPins":                    reflect.ValueOf(constant.MakeFromLiteral("\"Public-Key-Pins\"", token.STRING, 0)),
		"HeaderPublicKeyPinsReportOnly":          reflect.ValueOf(constant.MakeFromLiteral("\"Public-Key-Pins-Report-Only\"", token.STRING, 0)),
		"HeaderPushPolicy":                       reflect.ValueOf(constant.MakeFromLiteral("\"Push-Policy\"", token.STRING, 0)),
		"HeaderRange":                            reflect.ValueOf(constant.MakeFromLiteral("\"Range\"", token.STRING, 0)),
		"HeaderReferer":                          reflect.ValueOf(constant.MakeFromLiteral("\"Referer\"", token.STRING, 0)),
		"HeaderReferrerPolicy":                   reflect.ValueOf(constant.MakeFromLiteral("\"Referrer-Policy\"", token.STRING, 0)),
		"HeaderReportTo":                         reflect.ValueOf(constant.MakeFromLiteral("\"Report-To\"", token.STRING, 0)),
		"HeaderRetryAfter":                       reflect.ValueOf(constant.MakeFromLiteral("\"Retry-After\"", token.STRING, 0)),
		"HeaderSaveData":                         reflect.ValueOf(constant.MakeFromLiteral("\"Save-Data\"", token.STRING, 0)),
		"HeaderSecWebSocketAccept":               reflect.ValueOf(constant.MakeFromLiteral("\"Sec-WebSocket-Accept\"", token.STRING, 0)),
		"HeaderSecWebSocketExtensions":           reflect.ValueOf(constant.MakeFromLiteral("\"Sec-WebSocket-Extensions\"", token.STRING, 0)),
		"HeaderSecWebSocketKey":                  reflect.ValueOf(constant.MakeFromLiteral("\"Sec-WebSocket-Key\"", token.STRING, 0)),
		"HeaderSecWebSocketProtocol":             reflect.ValueOf(constant.MakeFromLiteral("\"Sec-WebSocket-Protocol\"", token.STRING, 0)),
		"HeaderSecWebSocketVersion":              reflect.ValueOf(constant.MakeFromLiteral("\"Sec-WebSocket-Version\"", token.STRING, 0)),
		"HeaderServer":                           reflect.ValueOf(constant.MakeFromLiteral("\"Server\"", token.STRING, 0)),
		"HeaderServerTiming":                     reflect.ValueOf(constant.MakeFromLiteral("\"Server-Timing\"", token.STRING, 0)),
		"HeaderSetCookie":                        reflect.ValueOf(constant.MakeFromLiteral("\"Set-Cookie\"", token.STRING, 0)),
		"HeaderSignature":                        reflect.ValueOf(constant.MakeFromLiteral("\"Signature\"", token.STRING, 0)),
		"HeaderSignedHeaders":                    reflect.ValueOf(constant.MakeFromLiteral("\"Signed-Headers\"", token.STRING, 0)),
		"HeaderSourceMap":                        reflect.ValueOf(constant.MakeFromLiteral("\"SourceMap\"", token.STRING, 0)),
		"HeaderStrictTransportSecurity":          reflect.ValueOf(constant.MakeFromLiteral("\"Strict-Transport-Security\"", token.STRING, 0)),
		"HeaderTE":                               reflect.ValueOf(constant.MakeFromLiteral("\"TE\"", token.STRING, 0)),
		"HeaderTimingAllowOrigin":                reflect.ValueOf(constant.MakeFromLiteral("\"Timing-Allow-Origin\"", token.STRING, 0)),
		"HeaderTk":                               reflect.ValueOf(constant.MakeFromLiteral("\"Tk\"", token.STRING, 0)),
		"HeaderTrailer":                          reflect.ValueOf(constant.MakeFromLiteral("\"Trailer\"", token.STRING, 0)),
		"HeaderTransferEncoding":                 reflect.ValueOf(constant.MakeFromLiteral("\"Transfer-Encoding\"", token.STRING, 0)),
		"HeaderUpgrade":                          reflect.ValueOf(constant.MakeFromLiteral("\"Upgrade\"", token.STRING, 0)),
		"HeaderUpgradeInsecureRequests":          reflect.ValueOf(constant.MakeFromLiteral("\"Upgrade-Insecure-Requests\"", token.STRING, 0)),
		"HeaderUserAgent":                        reflect.ValueOf(constant.MakeFromLiteral("\"User-Agent\"", token.STRING, 0)),
		"HeaderVary":                             reflect.ValueOf(constant.MakeFromLiteral("\"Vary\"", token.STRING, 0)),
		"HeaderVia":                              reflect.ValueOf(constant.MakeFromLiteral("\"Via\"", token.STRING, 0)),
		"HeaderViewportWidth":                    reflect.ValueOf(constant.MakeFromLiteral("\"Viewport-Width\"", token.STRING, 0)),
		"HeaderWWWAuthenticate":                  reflect.ValueOf(constant.MakeFromLiteral("\"WWW-Authenticate\"", token.STRING, 0)),
		"HeaderWarning":                          reflect.ValueOf(constant.MakeFromLiteral("\"Warning\"", token.STRING, 0)),
		"HeaderWidth":                            reflect.ValueOf(constant.MakeFromLiteral("\"Width\"", token.STRING, 0)),
		"HeaderXContentTypeOptions":              reflect.ValueOf(constant.MakeFromLiteral("\"X-Content-Type-Options\"", token.STRING, 0)),
		"HeaderXDNSPrefetchControl":              reflect.ValueOf(constant.MakeFromLiteral("\"X-DNS-Prefetch-Control\"", token.STRING, 0)),
		"HeaderXDownloadOptions":                 reflect.ValueOf(constant.MakeFromLiteral("\"X-Download-Options\"", token.STRING, 0)),
		"HeaderXForwardedFor":                    reflect.ValueOf(constant.MakeFromLiteral("\"X-Forwarded-For\"", token.STRING, 0)),
		"HeaderXForwardedHost":                   reflect.ValueOf(constant.MakeFromLiteral("\"X-Forwarded-Host\"", token.STRING, 0)),
		"HeaderXForwardedProto":                  reflect.ValueOf(constant.MakeFromLiteral("\"X-Forwarded-Proto\"", token.STRING, 0)),
		"HeaderXFrameOptions":                    reflect.ValueOf(constant.MakeFromLiteral("\"X-Frame-Options\"", token.STRING, 0)),
		"HeaderXPermittedCrossDomainPolicies":    reflect.ValueOf(constant.MakeFromLiteral("\"X-Permitted-Cross-Domain-Policies\"", token.STRING, 0)),
		"HeaderXPingback":                        reflect.ValueOf(constant.MakeFromLiteral("\"X-Pingback\"", token.STRING, 0)),
		"HeaderXPoweredBy":                       reflect.ValueOf(constant.MakeFromLiteral("\"X-Powered-By\"", token.STRING, 0)),
		"HeaderXRequestedWith":                   reflect.ValueOf(constant.MakeFromLiteral("\"X-Requested-With\"", token.STRING, 0)),
		"HeaderXRobotsTag":                       reflect.ValueOf(constant.MakeFromLiteral("\"X-Robots-Tag\"", token.STRING, 0)),
		"HeaderXUACompatible":                    reflect.ValueOf(constant.MakeFromLiteral("\"X-UA-Compatible\"", token.STRING, 0)),
		"HeaderXXSSProtection":                   reflect.ValueOf(constant.MakeFromLiteral("\"X-XSS-Protection\"", token.STRING, 0)),
		"LIFO":                                   reflect.ValueOf(fasthttp.LIFO),
		"ListenAndServe":                         reflect.ValueOf(fasthttp.ListenAndServe),
		"ListenAndServeTLS":                      reflect.ValueOf(fasthttp.ListenAndServeTLS),
		"ListenAndServeTLSEmbed":                 reflect.ValueOf(fasthttp.ListenAndServeTLSEmbed),
		"ListenAndServeUNIX":                     reflect.ValueOf(fasthttp.ListenAndServeUNIX),
		"MethodConnect":                          reflect.ValueOf(constant.MakeFromLiteral("\"CONNECT\"", token.STRING, 0)),
		"MethodDelete":                           reflect.ValueOf(constant.MakeFromLiteral("\"DELETE\"", token.STRING, 0)),
		"MethodGet":                              reflect.ValueOf(constant.MakeFromLiteral("\"GET\"", token.STRING, 0)),
		"MethodHead":                             reflect.ValueOf(constant.MakeFromLiteral("\"HEAD\"", token.STRING, 0)),
		"MethodOptions":                          reflect.ValueOf(constant.MakeFromLiteral("\"OPTIONS\"", token.STRING, 0)),
		"MethodPatch":                            reflect.ValueOf(constant.MakeFromLiteral("\"PATCH\"", token.STRING, 0)),
		"MethodPost":                             reflect.ValueOf(constant.MakeFromLiteral("\"POST\"", token.STRING, 0)),
		"MethodPut":                              reflect.ValueOf(constant.MakeFromLiteral("\"PUT\"", token.STRING, 0)),
		"MethodTrace":                            reflect.ValueOf(constant.MakeFromLiteral("\"TRACE\"", token.STRING, 0)),
		"NetHttpFormValueFunc":                   reflect.ValueOf(&fasthttp.NetHttpFormValueFunc).Elem(),
		"NewPathPrefixStripper":                  reflect.ValueOf(fasthttp.NewPathPrefixStripper),
		"NewPathSlashesStripper":                 reflect.ValueOf(fasthttp.NewPathSlashesStripper),
		"NewStreamReader":                        reflect.ValueOf(fasthttp.NewStreamReader),
		"NewVHostPathRewriter":                   reflect.ValueOf(fasthttp.NewVHostPathRewriter),
		"ParseByteRange":                         reflect.ValueOf(fasthttp.ParseByteRange),
		"ParseHTTPDate":                          reflect.ValueOf(fasthttp.ParseHTTPDate),
		"ParseIPv4":                              reflect.ValueOf(fasthttp.ParseIPv4),
		"ParseUfloat":                            reflect.ValueOf(fasthttp.ParseUfloat),
		"ParseUint":                              reflect.ValueOf(fasthttp.ParseUint),
		"Post":                                   reflect.ValueOf(fasthttp.Post),
		"ReleaseArgs":                            reflect.ValueOf(fasthttp.ReleaseArgs),
		"ReleaseCookie":                          reflect.ValueOf(fasthttp.ReleaseCookie),
		"ReleaseRequest":                         reflect.ValueOf(fasthttp.ReleaseRequest),
		"ReleaseResponse":                        reflect.ValueOf(fasthttp.ReleaseResponse),
		"ReleaseTimer":                           reflect.ValueOf(fasthttp.ReleaseTimer),
		"ReleaseURI":                             reflect.ValueOf(fasthttp.ReleaseURI),
		"SaveMultipartFile":                      reflect.ValueOf(fasthttp.SaveMultipartFile),
		"Serve":                                  reflect.ValueOf(fasthttp.Serve),
		"ServeConn":                              reflect.ValueOf(fasthttp.ServeConn),
		"ServeFS":                                reflect.ValueOf(fasthttp.ServeFS),
		"ServeFile":                              reflect.ValueOf(fasthttp.ServeFile),
		"ServeFileBytes":                         reflect.ValueOf(fasthttp.ServeFileBytes),
		"ServeFileBytesUncompressed":             reflect.ValueOf(fasthttp.ServeFileBytesUncompressed),
		"ServeFileUncompressed":                  reflect.ValueOf(fasthttp.ServeFileUncompressed),
		"ServeTLS":                               reflect.ValueOf(fasthttp.ServeTLS),
		"ServeTLSEmbed":                          reflect.ValueOf(fasthttp.ServeTLSEmbed),
		"SetBodySizePoolLimit":                   reflect.ValueOf(fasthttp.SetBodySizePoolLimit),
		"StateActive":                            reflect.ValueOf(fasthttp.StateActive),
		"StateClosed":                            reflect.ValueOf(fasthttp.StateClosed),
		"StateHijacked":                          reflect.ValueOf(fasthttp.StateHijacked),
		"StateIdle":                              reflect.ValueOf(fasthttp.StateIdle),
		"StateNew":                               reflect.ValueOf(fasthttp.StateNew),
		"StatusAccepted":                         reflect.ValueOf(constant.MakeFromLiteral("202", token.INT, 0)),
		"StatusAlreadyReported":                  reflect.ValueOf(constant.MakeFromLiteral("208", token.INT, 0)),
		"StatusBadGateway":                       reflect.ValueOf(constant.MakeFromLiteral("502", token.INT, 0)),
		"StatusBadRequest":                       reflect.ValueOf(constant.MakeFromLiteral("400", token.INT, 0)),
		"StatusCodeIsRedirect":                   reflect.ValueOf(fasthttp.StatusCodeIsRedirect),
		"StatusConflict":                         reflect.ValueOf(constant.MakeFromLiteral("409", token.INT, 0)),
		"StatusContinue":                         reflect.ValueOf(constant.MakeFromLiteral("100", token.INT, 0)),
		"StatusCreated":                          reflect.ValueOf(constant.MakeFromLiteral("201", token.INT, 0)),
		"StatusEarlyHints":                       reflect.ValueOf(constant.MakeFromLiteral("103", token.INT, 0)),
		"StatusExpectationFailed":                reflect.ValueOf(constant.MakeFromLiteral("417", token.INT, 0)),
		"StatusFailedDependency":                 reflect.ValueOf(constant.MakeFromLiteral("424", token.INT, 0)),
		"StatusForbidden":                        reflect.ValueOf(constant.MakeFromLiteral("403", token.INT, 0)),
		"StatusFound":                            reflect.ValueOf(constant.MakeFromLiteral("302", token.INT, 0)),
		"StatusGatewayTimeout":                   reflect.ValueOf(constant.MakeFromLiteral("504", token.INT, 0)),
		"StatusGone":                             reflect.ValueOf(constant.MakeFromLiteral("410", token.INT, 0)),
		"StatusHTTPVersionNotSupported":          reflect.ValueOf(constant.MakeFromLiteral("505", token.INT, 0)),
		"StatusIMUsed":                           reflect.ValueOf(constant.MakeFromLiteral("226", token.INT, 0)),
		"StatusInsufficientStorage":              reflect.ValueOf(constant.MakeFromLiteral("507", token.INT, 0)),
		"StatusInternalServerError":              reflect.ValueOf(constant.MakeFromLiteral("500", token.INT, 0)),
		"StatusLengthRequired":                   reflect.ValueOf(constant.MakeFromLiteral("411", token.INT, 0)),
		"StatusLocked":                           reflect.ValueOf(constant.MakeFromLiteral("423", token.INT, 0)),
		"StatusLoopDetected":                     reflect.ValueOf(constant.MakeFromLiteral("508", token.INT, 0)),
		"StatusMessage":                          reflect.ValueOf(fasthttp.StatusMessage),
		"StatusMethodNotAllowed":                 reflect.ValueOf(constant.MakeFromLiteral("405", token.INT, 0)),
		"StatusMisdirectedRequest":               reflect.ValueOf(constant.MakeFromLiteral("421", token.INT, 0)),
		"StatusMovedPermanently":                 reflect.ValueOf(constant.MakeFromLiteral("301", token.INT, 0)),
		"StatusMultiStatus":                      reflect.ValueOf(constant.MakeFromLiteral("207", token.INT, 0)),
		"StatusMultipleChoices":                  reflect.ValueOf(constant.MakeFromLiteral("300", token.INT, 0)),
		"StatusNetworkAuthenticationRequired":    reflect.ValueOf(constant.MakeFromLiteral("511", token.INT, 0)),
		"StatusNoContent":                        reflect.ValueOf(constant.MakeFromLiteral("204", token.INT, 0)),
		"StatusNonAuthoritativeInfo":             reflect.ValueOf(constant.MakeFromLiteral("203", token.INT, 0)),
		"StatusNotAcceptable":                    reflect.ValueOf(constant.MakeFromLiteral("406", token.INT, 0)),
		"StatusNotExtended":                      reflect.ValueOf(constant.MakeFromLiteral("510", token.INT, 0)),
		"StatusNotFound":                         reflect.ValueOf(constant.MakeFromLiteral("404", token.INT, 0)),
		"StatusNotImplemented":                   reflect.ValueOf(constant.MakeFromLiteral("501", token.INT, 0)),
		"StatusNotModified":                      reflect.ValueOf(constant.MakeFromLiteral("304", token.INT, 0)),
		"StatusOK":                               reflect.ValueOf(constant.MakeFromLiteral("200", token.INT, 0)),
		"StatusPartialContent":                   reflect.ValueOf(constant.MakeFromLiteral("206", token.INT, 0)),
		"StatusPaymentRequired":                  reflect.ValueOf(constant.MakeFromLiteral("402", token.INT, 0)),
		"StatusPermanentRedirect":                reflect.ValueOf(constant.MakeFromLiteral("308", token.INT, 0)),
		"StatusPreconditionFailed":               reflect.ValueOf(constant.MakeFromLiteral("412", token.INT, 0)),
		"StatusPreconditionRequired":             reflect.ValueOf(constant.MakeFromLiteral("428", token.INT, 0)),
		"StatusProcessing":                       reflect.ValueOf(constant.MakeFromLiteral("102", token.INT, 0)),
		"StatusProxyAuthRequired":                reflect.ValueOf(constant.MakeFromLiteral("407", token.INT, 0)),
		"StatusRequestEntityTooLarge":            reflect.ValueOf(constant.MakeFromLiteral("413", token.INT, 0)),
		"StatusRequestHeaderFieldsTooLarge":      reflect.ValueOf(constant.MakeFromLiteral("431", token.INT, 0)),
		"StatusRequestTimeout":                   reflect.ValueOf(constant.MakeFromLiteral("408", token.INT, 0)),
		"StatusRequestURITooLong":                reflect.ValueOf(constant.MakeFromLiteral("414", token.INT, 0)),
		"StatusRequestedRangeNotSatisfiable":     reflect.ValueOf(constant.MakeFromLiteral("416", token.INT, 0)),
		"StatusResetContent":                     reflect.ValueOf(constant.MakeFromLiteral("205", token.INT, 0)),
		"StatusSeeOther":                         reflect.ValueOf(constant.MakeFromLiteral("303", token.INT, 0)),
		"StatusServiceUnavailable":               reflect.ValueOf(constant.MakeFromLiteral("503", token.INT, 0)),
		"StatusSwitchingProtocols":               reflect.ValueOf(constant.MakeFromLiteral("101", token.INT, 0)),
		"StatusTeapot":                           reflect.ValueOf(constant.MakeFromLiteral("418", token.INT, 0)),
		"StatusTemporaryRedirect":                reflect.ValueOf(constant.MakeFromLiteral("307", token.INT, 0)),
		"StatusTooManyRequests":                  reflect.ValueOf(constant.MakeFromLiteral("429", token.INT, 0)),
		"StatusUnauthorized":                     reflect.ValueOf(constant.MakeFromLiteral("401", token.INT, 0)),
		"StatusUnavailableForLegalReasons":       reflect.ValueOf(constant.MakeFromLiteral("451", token.INT, 0)),
		"StatusUnprocessableEntity":              reflect.ValueOf(constant.MakeFromLiteral("422", token.INT, 0)),
		"StatusUnsupportedMediaType":             reflect.ValueOf(constant.MakeFromLiteral("415", token.INT, 0)),
		"StatusUpgradeRequired":                  reflect.ValueOf(constant.MakeFromLiteral("426", token.INT, 0)),
		"StatusUseProxy":                         reflect.ValueOf(constant.MakeFromLiteral("305", token.INT, 0)),
		"StatusVariantAlsoNegotiates":            reflect.ValueOf(constant.MakeFromLiteral("506", token.INT, 0)),
		"TimeoutHandler":                         reflect.ValueOf(fasthttp.TimeoutHandler),
		"TimeoutWithCodeHandler":                 reflect.ValueOf(fasthttp.TimeoutWithCodeHandler),
		"VisitHeaderParams":                      reflect.ValueOf(fasthttp.VisitHeaderParams),
		"WriteBrotli":                            reflect.ValueOf(fasthttp.WriteBrotli),
		"WriteBrotliLevel":                       reflect.ValueOf(fasthttp.WriteBrotliLevel),
		"WriteDeflate":                           reflect.ValueOf(fasthttp.WriteDeflate),
		"WriteDeflateLevel":                      reflect.ValueOf(fasthttp.WriteDeflateLevel),
		"WriteGunzip":                            reflect.ValueOf(fasthttp.WriteGunzip),
		"WriteGzip":                              reflect.ValueOf(fasthttp.WriteGzip),
		"WriteGzipLevel":                         reflect.ValueOf(fasthttp.WriteGzipLevel),
		"WriteInflate":                           reflect.ValueOf(fasthttp.WriteInflate),
		"WriteMultipartForm":                     reflect.ValueOf(fasthttp.WriteMultipartForm),
		"WriteUnbrotli":                          reflect.ValueOf(fasthttp.WriteUnbrotli),
		"WriteUnzstd":                            reflect.ValueOf(fasthttp.WriteUnzstd),
		"WriteZstdLevel":                         reflect.ValueOf(fasthttp.WriteZstdLevel),

		// type definitions
		"Args":                    reflect.ValueOf((*fasthttp.Args)(nil)),
		"BalancingClient":         reflect.ValueOf((*fasthttp.BalancingClient)(nil)),
		"CacheKind":               reflect.ValueOf((*fasthttp.CacheKind)(nil)),
		"Client":                  reflect.ValueOf((*fasthttp.Client)(nil)),
		"ConnPoolStrategyType":    reflect.ValueOf((*fasthttp.ConnPoolStrategyType)(nil)),
		"ConnState":               reflect.ValueOf((*fasthttp.ConnState)(nil)),
		"Cookie":                  reflect.ValueOf((*fasthttp.Cookie)(nil)),
		"CookieSameSite":          reflect.ValueOf((*fasthttp.CookieSameSite)(nil)),
		"DialFunc":                reflect.ValueOf((*fasthttp.DialFunc)(nil)),
		"DialFuncWithTimeout":     reflect.ValueOf((*fasthttp.DialFuncWithTimeout)(nil)),
		"ErrBodyStreamWritePanic": reflect.ValueOf((*fasthttp.ErrBodyStreamWritePanic)(nil)),
		"ErrBrokenChunk":          reflect.ValueOf((*fasthttp.ErrBrokenChunk)(nil)),
		"ErrDialWithUpstream":     reflect.ValueOf((*fasthttp.ErrDialWithUpstream)(nil)),
		"ErrNothingRead":          reflect.ValueOf((*fasthttp.ErrNothingRead)(nil)),
		"ErrSmallBuffer":          reflect.ValueOf((*fasthttp.ErrSmallBuffer)(nil)),
		"EscapeError":             reflect.ValueOf((*fasthttp.EscapeError)(nil)),
		"FS":                      reflect.ValueOf((*fasthttp.FS)(nil)),
		"FormValueFunc":           reflect.ValueOf((*fasthttp.FormValueFunc)(nil)),
		"HijackHandler":           reflect.ValueOf((*fasthttp.HijackHandler)(nil)),
		"HostClient":              reflect.ValueOf((*fasthttp.HostClient)(nil)),
		"InvalidHostError":        reflect.ValueOf((*fasthttp.InvalidHostError)(nil)),
		"LBClient":                reflect.ValueOf((*fasthttp.LBClient)(nil)),
		"Logger":                  reflect.ValueOf((*fasthttp.Logger)(nil)),
		"PathRewriteFunc":         reflect.ValueOf((*fasthttp.PathRewriteFunc)(nil)),
		"PipelineClient":          reflect.ValueOf((*fasthttp.PipelineClient)(nil)),
		"ReadCloserWithError":     reflect.ValueOf((*fasthttp.ReadCloserWithError)(nil)),
		"Request":                 reflect.ValueOf((*fasthttp.Request)(nil)),
		"RequestConfig":           reflect.ValueOf((*fasthttp.RequestConfig)(nil)),
		"RequestCtx":              reflect.ValueOf((*fasthttp.RequestCtx)(nil)),
		"RequestHandler":          reflect.ValueOf((*fasthttp.RequestHandler)(nil)),
		"RequestHeader":           reflect.ValueOf((*fasthttp.RequestHeader)(nil)),
		"Resolver":                reflect.ValueOf((*fasthttp.Resolver)(nil)),
		"Response":                reflect.ValueOf((*fasthttp.Response)(nil)),
		"ResponseHeader":          reflect.ValueOf((*fasthttp.ResponseHeader)(nil)),
		"RetryIfErrFunc":          reflect.ValueOf((*fasthttp.RetryIfErrFunc)(nil)),
		"RetryIfFunc":             reflect.ValueOf((*fasthttp.RetryIfFunc)(nil)),
		"RoundTripper":            reflect.ValueOf((*fasthttp.RoundTripper)(nil)),
		"ServeHandler":            reflect.ValueOf((*fasthttp.ServeHandler)(nil)),
		"Server":                  reflect.ValueOf((*fasthttp.Server)(nil)),
		"StreamWriter":            reflect.ValueOf((*fasthttp.StreamWriter)(nil)),
		"TCPDialer":               reflect.ValueOf((*fasthttp.TCPDialer)(nil)),
		"URI":                     reflect.ValueOf((*fasthttp.URI)(nil)),

		// interface wrapper definitions
		"_BalancingClient":     reflect.ValueOf((*_github_com_valyala_fasthttp_BalancingClient)(nil)),
		"_Logger":              reflect.ValueOf((*_github_com_valyala_fasthttp_Logger)(nil)),
		"_ReadCloserWithError": reflect.ValueOf((*_github_com_valyala_fasthttp_ReadCloserWithError)(nil)),
		"_Resolver":            reflect.ValueOf((*_github_com_valyala_fasthttp_Resolver)(nil)),
		"_RoundTripper":        reflect.ValueOf((*_github_com_valyala_fasthttp_RoundTripper)(nil)),
	}
}

// _github_com_valyala_fasthttp_BalancingClient is an interface wrapper for BalancingClient type
type _github_com_valyala_fasthttp_BalancingClient struct {
	IValue           interface{}
	WDoDeadline      func(req *fasthttp.Request, resp *fasthttp.Response, deadline time.Time) error
	WPendingRequests func() int
}

func (W _github_com_valyala_fasthttp_BalancingClient) DoDeadline(req *fasthttp.Request, resp *fasthttp.Response, deadline time.Time) error {
	return W.WDoDeadline(req, resp, deadline)
}
func (W _github_com_valyala_fasthttp_BalancingClient) PendingRequests() int {
	return W.WPendingRequests()
}

// _github_com_valyala_fasthttp_Logger is an interface wrapper for Logger type
type _github_com_valyala_fasthttp_Logger struct {
	IValue  interface{}
	WPrintf func(format string, args ...any)
}

func (W _github_com_valyala_fasthttp_Logger) Printf(format string, args ...any) {
	W.WPrintf(format, args...)
}

// _github_com_valyala_fasthttp_ReadCloserWithError is an interface wrapper for ReadCloserWithError type
type _github_com_valyala_fasthttp_ReadCloserWithError struct {
	IValue          interface{}
	WCloseWithError func(err error) error
	WRead           func(p []byte) (n int, err error)
}

func (W _github_com_valyala_fasthttp_ReadCloserWithError) CloseWithError(err error) error {
	return W.WCloseWithError(err)
}
func (W _github_com_valyala_fasthttp_ReadCloserWithError) Read(p []byte) (n int, err error) {
	return W.WRead(p)
}

// _github_com_valyala_fasthttp_Resolver is an interface wrapper for Resolver type
type _github_com_valyala_fasthttp_Resolver struct {
	IValue        interface{}
	WLookupIPAddr func(a0 context.Context, a1 string) (names []net.IPAddr, err error)
}

func (W _github_com_valyala_fasthttp_Resolver) LookupIPAddr(a0 context.Context, a1 string) (names []net.IPAddr, err error) {
	return W.WLookupIPAddr(a0, a1)
}

// _github_com_valyala_fasthttp_RoundTripper is an interface wrapper for RoundTripper type
type _github_com_valyala_fasthttp_RoundTripper struct {
	IValue     interface{}
	WRoundTrip func(hc *fasthttp.HostClient, req *fasthttp.Request, resp *fasthttp.Response) (retry bool, err error)
}

func (W _github_com_valyala_fasthttp_RoundTripper) RoundTrip(hc *fasthttp.HostClient, req *fasthttp.Request, resp *fasthttp.Response) (retry bool, err error) {
	return W.WRoundTrip(hc, req, resp)
}
